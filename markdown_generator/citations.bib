
@misc{sizikova_automatic_2022,
	title = {Automatic {Infectious} {Disease} {Classification} {Analysis} with {Concept} {Discovery}},
	copyright = {Creative Commons Attribution 4.0 International},
	url = {https://arxiv.org/abs/2209.02415},
	publisher = {arXiv},
	author = {Sizikova, Elena and Vendrow, Joshua and Cao, Xu and Grotheer, Rachel and Haddock, Jamie and Kassab, Lara and Kryshchenko, Alona and Merkh, Thomas and Madushani, R. W. M. A. and Moise, Kenny and Ulichney, Annie and Vo, Huy V. and Wang, Chuntian and Coffee, Megan and Leonard, Kathryn and Needell, Deanna},
	year = {2022},
	doi = {10.48550/ARXIV.2209.02415},
	keywords = {Computer Vision and Pattern Recognition (cs.CV), Artificial Intelligence (cs.AI), FOS: Computer and information sciences, FOS: Computer and information sciences},
}

@misc{wang_balanceproofs:_2022,
	title = {{BalanceProofs}: {Maintainable} {Vector} {Commitments} with {Fast} {Aggregation}},
	shorttitle = {{BalanceProofs}},
	url = {https://eprint.iacr.org/2022/864},
	abstract = {We present BalanceProofs, the first vector commitment scheme that is maintainable (i.e., supporting sublinear updates) while also supporting fast proof aggregation and verification. The basic version of BalanceProofs has \$O({\textbackslash}sqrt\{n\}{\textbackslash}log n)\$ update time and \$O({\textbackslash}sqrt\{n\})\$ query time and its constant-size aggregated proofs can be produced and verified in milliseconds. In particular, BalanceProofs improves the aggregation time and aggregation verification time of the only known maintainable and aggregatable vector commitment scheme, HyperProofs (USENIX SECURITY 2022), by up to 1000\${\textbackslash}times\$. Fast verification of aggregated proofs is particularly useful for applications such as stateless cryptocurrencies (and was a major bottleneck for Hyperproofs), where an aggregated proof of balances is produced once but must be verified multiple times and by a large number of nodes. As a limitation, BalanceProofs' update time compared to Hyperproofs roughly doubles, but always stays in the range from 2 to 3 seconds. BalanceProofs can be viewed as a compiler that transforms any non-maintainable vector commitment with fast aggregation to a maintainable one with the aforementioned complexities. We finally study useful tradeoffs in BalanceProofs between (aggregate) proof size, update time and (aggregate) proof computation and verification, by introducing a bucketing technique, and present an extensive evaluation, including a comparison to Hyperproofs as well as applications of BalanceProofs to Verkle trees.},
	urldate = {2022-09-11},
	author = {Wang, Weijie and Ulichney, Annie and Papamanthou, Charalampos},
	year = {2022},
	keywords = {Vector Commitments},
}
