data <- data %>%
mutate(log_gdppc_1995 = log(gdppc_1995))
data <- data %>%
mutate(log_gdppc_1995 = log(gdppc_1995), log_exprop85_95 = log(exprop85_95))
plot(data$log_exprop85_95, data$log_gdppc_1995)
library(modelsummary)
model1 <- lm(log_gdppc_95 ~ log_gdppc_95, data = data)
model1 <- lm(log_gdppc_1995 ~ log_gdppc_95, data = data)
model1 <- lm(log_gdppc_1995 ~ log_exprop85_95, data = data)
msummary(model1, stars = c('*' = .1, '**' = .05, '***' = .01))
model2 <- lm(log_gdppc_1995 ~ log_exprop85_95 + latitude + asia + africa + america, data = data)
msummary(model2, stars = c('*' = .1, '**' = .05, '***' = .01))
model3 <- lm(log_exprop85_95 ~ log_settler_mortality + latitude + asia + africa + america, data = data)
msummary(model3, stars = c('*' = .1, '**' = .05, '***' = .01))
model3 <- lm(log_exprop85_95 ~ log_settler_mortality, data = data)
msummary(model3, stars = c('*' = .1, '**' = .05, '***' = .01))
install.packages("ivpack")
(ivpack)
iv_model <- ivreg(log_gdppc_1995 ~ log_exprop85_95 | log_exprop85_95, data = data)
library(ivpack)
iv_model <- ivreg(log_gdppc_1995 ~ log_exprop85_95 | log_exprop85_95, data = data)
msummary(iv_model, stars = c('*' = .1, '**' = .05, '***' = .01))
msummary(model3, stars = c('*' = .1, '**' = .05, '***' = .01))
msummary(model1, stars = c('*' = .1, '**' = .05, '***' = .01))
iv_model <- ivreg(log_gdppc_1995 ~ log_exprop85_95 | log_settler_mortality, data = data)
msummary(iv_model, stars = c('*' = .1, '**' = .05, '***' = .01))
install.packages("AER")
library(AER)
data <- CigarettesSW
data <- data(CigarettesSW)
head(data)
data(CigarettesSW)
head(CigarettesSW)
CigarettesSW <- CigarettesSW %>%
mutate(real_price = price/cpi, real_tax = taxs/cpi, log_price = log(real_price), log_packs = log(packs))
CigarettesSW <- CigarettesSW %>%
mutate(real_price = price/cpi, real_tax = taxs/cpi,
log_price = log(real_price), log_packs = log(packs))
library(tidyverse)
CigarettesSW <- CigarettesSW %>%
mutate(real_price = price/cpi, real_tax = taxs/cpi,
log_price = log(real_price), log_packs = log(packs))
head(CigarettesSW)
library(ivpack)
model <- ivreg(log_pack ~ log_price | real_tax, data = CigarettesSW)
model <- ivreg(log_packs ~ log_price | real_tax, data = CigarettesSW)
library(modelsummary)
msummary(model1, stars = c('*' = .1, '**' = .05, '***' = .01))
msummary(model, stars = c('*' = .1, '**' = .05, '***' = .01))
library(tidyverse)
CigarettesSW <- CigarettesSW %>%
mutate(log_income = log(income))
ivmodel_2 <- ivreg(log_packs ~ log_price _ log_income | log_income + real_tax, data = CigarettesSW)
ivmodel_2 <- ivreg(log_packs ~ log_price + log_income | log_income + real_tax, data = CigarettesSW)
msummary(ivmodel_2, stars = c('*' = .1, '**' = .05, '***' = .01))
plot(data$log_exprop85_95, data$log_gdppc_1995)
data <- data %>%
mutate(log_gdppc_1995 = log(gdppc_1995), log_exprop85_95 = log(exprop85_95))
library(tidyverse)
library(readxl)
library(tidyverse)
data <- read_excel("activity_4.xlsx")
data <- data %>%
mutate(log_gdppc_1995 = log(gdppc_1995), log_exprop85_95 = log(exprop85_95))
plot(data$log_exprop85_95, data$log_gdppc_1995)
setwd("~/OneDrive - Centre College of Kentucky/Classes/Seminar/Spring 2022/Rstudio/R-practice/Activity 1")
data<-read_excel("activity_1.xlsx") #open dataset
head(data) #Check the variables and how the data is structured
stats <- c(mean(data$total), median(data$total), max(data$total), min(data$total), var(data$total), max(data$total)-min(data$total))
names(stats)<-c("Mean", "Median", "Maximum", "Minimum", "Variance", "Range") #The function names() assign labels to the values of the variable stats
stats
mean_verbal <- mean(data$verbal) #Find the mean verbal test score
mean_math <- mean(data$math) #Find the mean math test score
mean_verbal - mean_math
plot(data$verbal,data$math)
data <- data %>%
group_by(schoolid) %>%
mutate(total_within = total - mean(total), balsakhi_within = balsakhi - mean(balsakhi)) %>%
ungroup()
model1 <- lm(total_within ~ balsakhi_within, data=data)
msummary(model1, stars = c('*' = .1, '**' = .05, '***' = .01))
library(tidyverse)
library(readxl)
library(dplyr)
library(modelsummary)
#First set the working directory where the file "activity_1.xlsx" is located
setwd("~/OneDrive - Centre College of Kentucky/Classes/Seminar/Spring 2022/Rstudio/R-practice/DID_Activity")
data<-read_excel("DID_activity.xlsx") #open dataset
data %>%                                        # Specify data frame
group_by(balsakhi) %>%                        # Specify group indicator
summarize(mean = mean(total_post)) %>%
ungroup()
data %>%                                        # Specify data frame
group_by(balsakhi) %>%                  # Specify group indicator
summarize(mean_post = mean(total_post[balsakhi==1]), mean_pre = mean(total_pre[balsakhi==1])) %>%
ungroup()
data %>%                                        # Specify data frame
group_by(balsakhi) %>%                        # Specify group indicator
summarize(mean_post = mean(total_post), mean_pre = mean(total_pre)) %>%
ungroup()
reg <- read_excel("Regression.xlsx")
reg$interaction <- reg$balsakhi*reg$post #Create interaction term
did_1 <- lm(total ~ balsakhi + post + interaction, data = reg)
msummary(did_1, stars = c('*' = .1, '**' = .05, '***' = .01))
did_2 <- lm(total ~ balsakhi*post, data = reg)
msummary(did_2, stars = c('*' = .1, '**' = .05, '***' = .01))
did_3 <- lm(total ~ balsakhi*post + male + numstud, data = reg)
msummary(did_3, stars = c('*' = .1, '**' = .05, '***' = .01))
library(wooldridge)
head(rdchem)
model1<-lm(lrd~lsales,data=rdchem)
summary(model1)
nrow(rdchem)
correl(bwght$faminc,bwght$cigs)
cor(bwght$faminc,bwght$cigs)
wage1$resid <- resid(lm(lwage~educ+exper+tenure,data=wage1))
model2<-lm(lwage~resid,data=wage1)
wage1$resid <- resid(lm(educ~exper+tenure,data=wage1))
model2<-lm(lwage~resid,data=wage1)
model3<-lm(lwage~educ+exper+tenure,data=wage1)
summary(model2)
summary(model3)
head(rdchem)
library(wooldridge)
model1<-lm(lwage~educ+exper+tenure,data=wage1)
summary(model1)
wage1$resid <- resid(lm(educ~exper+tenure,data=wage1))
model2<-lm(lwage~resid,data=wage1)
summary(model2)
head(rdchem)
model_rd<-lm(lrd~lsales,data=rdchem)
summary(model_rd)
rdchem$sales2<-rdchem$sales^2
head(rdchem)
rdchem$lsalessq<-rdchem$log(sales)
rdchem$lsalessq<-rdchem$lapply(log(sales))
rdchem$lsalessq<-log(rdchem$sales)
model_wrong<-lm(lrd~lsales+lsalessq,data=rdchem)
summary(model_wrong)
model_coef<-lm(IQ~educ,data=wage2)
summary(model_coef)
model_wage1<-lm(lwage~educ,data=wage2)
summary(model_wage1)
model_wage2<-lm(lwage~educ+IQ,data=wage2)
summary(model_wage2)
0.0391199+(0.0058631*3.5338)
gpa<-c(2.8, 3.43.0,3.5,3.6,3.0,2.7,3.7)
gpa<-c(2.8, 3.4,3.0,3.5,3.6,3.0,2.7,3.7)
act<-c(21,24,26,27,29,25,25,30)
data<-data.frame(gpa,act)
model1<-lm(gpa~act,data=data)
summary(data)
summary(model1)
plot(gpa,act)
abline(lm(gpa~act))
plot(act,gpa)
abline(lm(gpa~act))
u <- dnorm(mean=0,sd=1)
x <- seq(0,100,by=0.1)
u <- dnorm(x,mean=0,sd=1)
plot(u,x)
plot(x,u)
x <- seq(-100,100,by=0.1)
u <- dnorm(x,mean=0,sd=1)
plot(x,u)
x <- seq(-1,1,by=0.001)
u <- dnorm(x,mean=0,sd=1)
plot(x,u)
x <- seq(0,1000,by=0.1)
y <- 2+0.5*x+rnorm(10000,mean=0,sd=2)
y <- 2+0.5*x
plot(x,y)
size(y)
ncol(y)
nrow(y)
y
x <- seq(0,1000,by=1)
y <- 2+0.5*x + rnorm(1000,mean=0,sd=2)
x
y <- 2+0.5*x + rnorm(1001,mean=0,sd=2)
plot(y)
x <- seq(0,1000,by=0.1)
y <- 2+0.5*x + rnorm(1001,mean=0,sd=50)
x <- seq(0,1000,by=0.1)
y <- 2+0.5*x + rnorm(1001,mean=0,sd=50)
x <- seq(0,100,by=0.1)
y <- 2+0.5*x + rnorm(101,mean=0,sd=5)
x
x <- seq(0,100,by=0.1)
y <- 2+0.5*x + rnorm(101,mean=0,sd=1)
u <- rnorm(101)
x <- seq(0,1000,by=1)
u <- rnorm(1001)
y <- 2 + 0.5*x + u
plot(y)
x <- seq(0,1000,by=1)
u <- rnorm(1001,sd=10)
y <- 2 + 0.5*x + u
plot(y)
x <- seq(0,1000,by=1)
u <- rnorm(1001,sd=100)
y <- 2 + 0.5*x + u
plot(y)
x <- seq(0,1000,by=1)
u <- rnorm(1001,sd=300)
y <- 2 + 0.5*x + u
plot(y)
x <- seq(0,1000,by=1)
u <- rnorm(1001,sd=200)
y <- 2 + 0.5*x + u
plot(y)
x <- seq(0,1000,by=1)
u <- rnorm(1001,sd=200)
y <- 2 + 1.5*x + u
plot(y)
x <- seq(0,1000,by=1)
u <- rnorm(1001,sd=300)
y <- 2 + 2.5*x + u
plot(y)
x <- seq(0,1000,by=1)
u <- rnorm(1001,sd=500)
y <- 2 + 2.5*x + u
plot(y)
data<-data.frame(x,y,u)
head(data)
data<-data.frame(x,y)
sample<-data[sample(data,20),]
sample1<-data[sample(nrow(df), 20), ]
sample1<-data[sample(nrow(data), 20), ]
sample1
N <- 100000
X <- runif(N, min = 0, max = 20)
u <- rnorm(N, sd = 10)
Y <- -2 + 3.5 * X + u
population <- data.frame(X, Y)
plot(X,Y)
# simulate data
N <- 100000
X <- runif(N, min = 0, max = 20)
u <- rnorm(N, sd = 10)
# population regression
Y <- -2 + 3.5 * X + u
population <- data.frame(X, Y)
# set repetitions and sample size
n <- 100
reps <- 10000
# initialize the matrix of outcomes
fit <- matrix(ncol = 2, nrow = reps)
# loop sampling and estimation of the coefficients
for (i in 1:reps){
sample <- population[sample(1:N, n), ]
fit[i, ] <- lm(Y ~ X, data = sample)$coefficients
}
# divide plotting area as 1-by-2 array
par(mfrow = c(1, 2))
# plot histograms of beta_0 estimates
hist(fit[, 1],
cex.main = 1,
main = bquote(The ~ Distribution  ~ of ~ 10000 ~ beta[0] ~ Estimates),
xlab = bquote(hat(beta)[0]),
freq = F)
# add true distribution to plot
curve(dnorm(x,
-2,
sqrt(var_b0)),
add = T,
col = "darkred")
# simulate data
N <- 100000
X <- runif(N, min = 0, max = 20)
u <- rnorm(N, sd = 10)
# population regression
Y <- -2 + 3.5 * X + u
population <- data.frame(X, Y)
# set sample size
n <- 100
# compute the variance of beta_hat_0
H_i <- 1 - mean(X) / mean(X^2) * X
var_b0 <- var(H_i * u) / (n * mean(H_i^2)^2 )
# compute the variance of hat_beta_1
var_b1 <- var( ( X - mean(X) ) * u ) / (100 * var(X)^2)
# set repetitions and sample size
n <- 100
reps <- 10000
# initialize the matrix of outcomes
fit <- matrix(ncol = 2, nrow = reps)
# loop sampling and estimation of the coefficients
for (i in 1:reps){
sample <- population[sample(1:N, n), ]
fit[i, ] <- lm(Y ~ X, data = sample)$coefficients
}
# divide plotting area as 1-by-2 array
par(mfrow = c(1, 2))
# plot histograms of beta_0 estimates
hist(fit[, 1],
cex.main = 1,
main = bquote(The ~ Distribution  ~ of ~ 10000 ~ beta[0] ~ Estimates),
xlab = bquote(hat(beta)[0]),
freq = F)
# add true distribution to plot
curve(dnorm(x,
-2,
sqrt(var_b0)),
add = T,
col = "darkred")
# plot histograms of beta_hat_1
hist(fit[, 2],
cex.main = 1,
main = bquote(The ~ Distribution  ~ of ~ 10000 ~ beta[1] ~ Estimates),
xlab = bquote(hat(beta)[1]),
freq = F)
# add true distribution to plot
curve(dnorm(x,
3.5,
sqrt(var_b1)),
add = T,
col = "darkred")
# simulate data
N <- 100000
X <- runif(N, min = 0, max = 20)
u <- rnorm(N, sd = 10)
# population regression
Y <- -2 + 3.5 * X + u
population <- data.frame(X, Y)
# set repetitions and sample size
n <- 100
reps <- 10000
# initialize the matrix of outcomes
fit <- matrix(ncol = 2, nrow = reps)
# loop sampling and estimation of the coefficients
for (i in 1:reps){
sample <- population[sample(1:N, n), ]
fit[i, ] <- lm(Y ~ X, data = sample)$coefficients
}
# divide plotting area as 1-by-2 array
par(mfrow = c(1, 2))
# plot histograms of beta_0 estimates
hist(fit[, 1],
cex.main = 1,
main = bquote(The ~ Distribution  ~ of ~ 10000 ~ beta[0] ~ Estimates),
xlab = bquote(hat(beta)[0]),
freq = F)
# plot histograms of beta_hat_1
hist(fit[, 2],
cex.main = 1,
main = bquote(The ~ Distribution  ~ of ~ 10000 ~ beta[1] ~ Estimates),
xlab = bquote(hat(beta)[1]),
freq = F)
plot(X,Y)
sample1 < -population[sample(1:N,100),]
sample1 < -population[sample(nrow(population),100),]
sample1 <- population[sample(nrow(population),100),]
modeltest<-lm(Y~X,data=sample1)
summary(modeltest)
plot(sample1$X,sample1$Y)
abline(lm(Y~X,data=sample1))
plot(sample1$X,sample1$Y)
abline(lm(Y~X,data=sample1))
plot(sample1$X,sample1$Y)
abline(lm(sample1$Y~sample1$mX))
plot(sample1$X,sample1$Y)
abline(lm(sample1$Y~sample1$X))
gpa<-c(2.8, 3.4,3.0,3.5,3.6,3.0,2.7,3.7)
act<-c(21,24,26,27,29,25,25,30)
data1<-data.frame(gpa,act)
plot(act,gpa)
abline(lm(gpa~act))
data1
summary(gpa)
summary(act)
act_bar <- act-mean(act_bar)
act_bar <- act-mean(act)
act_bar
-4.875 - 1.875 + 0.125 + 1.125 +  3.125 - 0.875 - 0.875 + 4.125
act_bar_2 <- act_bar^2
act_bar_2
23.765625 + 3.515625 + 0.015625 + 1.265625 + 9.765625 + 0.765625 + 0.765625 + 17.015625
gpa_bar <- gpa - mean(gpa)
gpa_bar
act_bar*gpa_bar
2.0109375 - 0.3515625 - 0.0265625 + 0.3234375 + 1.2109375 + 0.1859375 + 0.4484375 + 2.0109375
5.8125/56.875
gpa_model<-lm(gpa~act,data=data1)
summary(gpa_model)
3.212-0.1022*25.88
gpa_fit<-0.56813+0.10220*act
gpa_fit
resid<-gpa-gpa_fit
resid
0.08567 + 0.37907 -0.22533 + 0.17247 + 0.06807 - 0.12313 - 0.42313 + 0.06587
act_resid<-act*resid
act_resid
1.79907 +  9.09768  - 5.85858 +  4.65669  + 1.97403  - 3.07825 - 10.57825 +  1.97610
gpa_bar_2<-gpa_bar^2
gpa_bar_2
0.17015625 + 0.03515625 + 0.04515625 + 0.08265625 + 0.15015625 + 0.04515625 + 0.26265625 + 0.23765625
gpa - gpa_fit
(gpa - gpa_fit)^2
0.007339349 + 0.143694065 + 0.050773609 + 0.029745901 + 0.004633525 + 0.015160997 + 0.179038997 + 0.004338857
(gpa_fit - mean(gpa))^2
0.2481733489 + 0.0366990649 + 0.0001646089 + 0.0132319009 + 0.1020355249 + 0.0079869969 + 0.0079869969 + 0.1777718569
.5940503/1.02875
900*.35
1-.35
.06+.012
315/.072
1/1.65
43^(1/1.65)
4375^(1/1.65)
900*160.9361^.35
1-.012
gpa<-c(2.8, 3.4,3.0,3.5,3.6,3.0,2.7,3.7)
act<-c(21,24,26,27,29,25,25,30)
data1<-data.frame(gpa,act)
plot(act,gpa)
abline(lm(gpa~act))
plot(X,u)
sample1 <- population[sample(nrow(population),100),]
modeltest<-lm(Y~X,data=sample1)
summary(modeltest)
sample1 <- population[sample(nrow(population),100),]
modeltest<-lm(Y~X,data=sample1)
summary(modeltest)
plot(sample1$X,sample1$Y)
sample1 <- population[sample(nrow(population),100),]
modeltest<-lm(Y~X,data=sample1)
summary(modeltest)
plot(sample1$X,sample1$Y)
N <- 100000
X <- runif(N, min = 0, max = 20)
u <- rnorm(N, sd = 500)
Y <- -2 + 3.5 * X + u
population <- data.frame(X, Y)
sample1 <- population[sample(nrow(population),100),]
modeltest<-lm(Y~X,data=sample1)
summary(modeltest)
plot(sample1$X,sample1$Y)
# simulate data
N <- 100000
X <- runif(N, min = 0, max = 20)
u <- rnorm(N, sd = 10)
# population regression
Y <- -2 + 3.5 * X + u
population <- data.frame(X, Y)
head(population)
sample1 <- population[sample(nrow(population),100),]
modeltest<-lm(Y~X,data=sample1)
summary(modeltest)
sample1 <- population[sample(nrow(population),100),]
modeltest<-lm(Y~X,data=sample1)
summary(modeltest)
sample1 <- population[sample(nrow(population),100),]
modeltest<-lm(Y~X,data=sample1)
summary(modeltest)
sample1 <- population[sample(nrow(population),100),]
modeltest<-lm(Y~X,data=sample1)
summary(modeltest)
sample1 <- population[sample(nrow(population),100),]
modeltest<-lm(Y~X,data=sample1)
summary(modeltest)
sample1 <- population[sample(nrow(population),100),]
modeltest<-lm(Y~X,data=sample1)
summary(modeltest)
sample1 <- population[sample(nrow(population),100),]
modeltest<-lm(Y~X,data=sample1)
summary(modeltest)
sample1 <- population[sample(nrow(population),100),]
modeltest<-lm(Y~X,data=sample1)
summary(modeltest)
sample1 <- population[sample(nrow(population),100),]
modeltest<-lm(Y~X,data=sample1)
summary(modeltest)
sample1 <- population[sample(nrow(population),100),]
modeltest<-lm(Y~X,data=sample1)
summary(modeltest)
sample1 <- population[sample(nrow(population),100),]
modeltest<-lm(Y~X,data=sample1)
summary(modeltest)
sample1 <- population[sample(nrow(population),100),]
modeltest<-lm(Y~X,data=sample1)
summary(modeltest)
sample1 <- population[sample(nrow(population),100),]
modeltest<-lm(Y~X,data=sample1)
summary(modeltest)
sample1 <- population[sample(nrow(population),100),]
modeltest<-lm(Y~X,data=sample1)
summary(modeltest)
plot(sample1$X,sample1$Y)
abline(lm(sample1$Y~sample1$X))
n <- 100
reps <- 10000
# initialize the matrix of outcomes
fit <- matrix(ncol = 2, nrow = reps)
# loop sampling and estimation of the coefficients
for (i in 1:reps){
sample <- population[sample(1:N, n), ]
fit[i, ] <- lm(Y ~ X, data = sample)$coefficients
}
# divide plotting area as 1-by-2 array
par(mfrow = c(1, 2))
# plot histograms of beta_0 estimates
hist(fit[, 1],
cex.main = 1,
main = bquote(The ~ Distribution  ~ of ~ 10000 ~ beta[0] ~ Estimates),
xlab = bquote(hat(beta)[0]),
freq = F)
# plot histograms of beta_hat_1
hist(fit[, 2],
cex.main = 1,
main = bquote(The ~ Distribution  ~ of ~ 10000 ~ beta[1] ~ Estimates),
xlab = bquote(hat(beta)[1]),
freq = F)
